<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nyist.dao.NotificationMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nyist.model.Notification">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="contract_id" jdbcType="INTEGER" property="contractId" />
    <result column="mixproportion_id" jdbcType="INTEGER" property="mixproportionId" />
    <result column="stoneamount" jdbcType="INTEGER" property="stoneamount" />
    <result column="sandamount" jdbcType="INTEGER" property="sandamount" />
    <result column="cementamount" jdbcType="INTEGER" property="cementamount" />
    <result column="wateramount" jdbcType="INTEGER" property="wateramount" />
    <result column="additiveamount" jdbcType="INTEGER" property="additiveamount" />
    <result column="concreteamount" jdbcType="INTEGER" property="concreteamount" />
    <result column="registrant" jdbcType="VARCHAR" property="registrant" />
    <result column="registranttime" jdbcType="BIGINT" property="registranttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, contract_id, mixproportion_id, stoneamount, sandamount, cementamount, wateramount, 
    additiveamount, concreteamount, registrant, registranttime
  </sql>
  <select id="selectByExample" parameterType="cn.edu.nyist.model.NotificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.nyist.model.NotificationExample">
    delete from notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.nyist.model.Notification">
    insert into notification (id, contract_id, mixproportion_id, 
      stoneamount, sandamount, cementamount, 
      wateramount, additiveamount, concreteamount, 
      registrant, registranttime)
    values (#{id,jdbcType=INTEGER}, #{contractId,jdbcType=INTEGER}, #{mixproportionId,jdbcType=INTEGER}, 
      #{stoneamount,jdbcType=INTEGER}, #{sandamount,jdbcType=INTEGER}, #{cementamount,jdbcType=INTEGER}, 
      #{wateramount,jdbcType=INTEGER}, #{additiveamount,jdbcType=INTEGER}, #{concreteamount,jdbcType=INTEGER}, 
      #{registrant,jdbcType=VARCHAR}, #{registranttime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nyist.model.Notification">
    insert into notification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="mixproportionId != null">
        mixproportion_id,
      </if>
      <if test="stoneamount != null">
        stoneamount,
      </if>
      <if test="sandamount != null">
        sandamount,
      </if>
      <if test="cementamount != null">
        cementamount,
      </if>
      <if test="wateramount != null">
        wateramount,
      </if>
      <if test="additiveamount != null">
        additiveamount,
      </if>
      <if test="concreteamount != null">
        concreteamount,
      </if>
      <if test="registrant != null">
        registrant,
      </if>
      <if test="registranttime != null">
        registranttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="mixproportionId != null">
        #{mixproportionId,jdbcType=INTEGER},
      </if>
      <if test="stoneamount != null">
        #{stoneamount,jdbcType=INTEGER},
      </if>
      <if test="sandamount != null">
        #{sandamount,jdbcType=INTEGER},
      </if>
      <if test="cementamount != null">
        #{cementamount,jdbcType=INTEGER},
      </if>
      <if test="wateramount != null">
        #{wateramount,jdbcType=INTEGER},
      </if>
      <if test="additiveamount != null">
        #{additiveamount,jdbcType=INTEGER},
      </if>
      <if test="concreteamount != null">
        #{concreteamount,jdbcType=INTEGER},
      </if>
      <if test="registrant != null">
        #{registrant,jdbcType=VARCHAR},
      </if>
      <if test="registranttime != null">
        #{registranttime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.nyist.model.NotificationExample" resultType="java.lang.Long">
    select count(*) from notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notification
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=INTEGER},
      </if>
      <if test="record.mixproportionId != null">
        mixproportion_id = #{record.mixproportionId,jdbcType=INTEGER},
      </if>
      <if test="record.stoneamount != null">
        stoneamount = #{record.stoneamount,jdbcType=INTEGER},
      </if>
      <if test="record.sandamount != null">
        sandamount = #{record.sandamount,jdbcType=INTEGER},
      </if>
      <if test="record.cementamount != null">
        cementamount = #{record.cementamount,jdbcType=INTEGER},
      </if>
      <if test="record.wateramount != null">
        wateramount = #{record.wateramount,jdbcType=INTEGER},
      </if>
      <if test="record.additiveamount != null">
        additiveamount = #{record.additiveamount,jdbcType=INTEGER},
      </if>
      <if test="record.concreteamount != null">
        concreteamount = #{record.concreteamount,jdbcType=INTEGER},
      </if>
      <if test="record.registrant != null">
        registrant = #{record.registrant,jdbcType=VARCHAR},
      </if>
      <if test="record.registranttime != null">
        registranttime = #{record.registranttime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notification
    set id = #{record.id,jdbcType=INTEGER},
      contract_id = #{record.contractId,jdbcType=INTEGER},
      mixproportion_id = #{record.mixproportionId,jdbcType=INTEGER},
      stoneamount = #{record.stoneamount,jdbcType=INTEGER},
      sandamount = #{record.sandamount,jdbcType=INTEGER},
      cementamount = #{record.cementamount,jdbcType=INTEGER},
      wateramount = #{record.wateramount,jdbcType=INTEGER},
      additiveamount = #{record.additiveamount,jdbcType=INTEGER},
      concreteamount = #{record.concreteamount,jdbcType=INTEGER},
      registrant = #{record.registrant,jdbcType=VARCHAR},
      registranttime = #{record.registranttime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nyist.model.Notification">
    update notification
    <set>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=INTEGER},
      </if>
      <if test="mixproportionId != null">
        mixproportion_id = #{mixproportionId,jdbcType=INTEGER},
      </if>
      <if test="stoneamount != null">
        stoneamount = #{stoneamount,jdbcType=INTEGER},
      </if>
      <if test="sandamount != null">
        sandamount = #{sandamount,jdbcType=INTEGER},
      </if>
      <if test="cementamount != null">
        cementamount = #{cementamount,jdbcType=INTEGER},
      </if>
      <if test="wateramount != null">
        wateramount = #{wateramount,jdbcType=INTEGER},
      </if>
      <if test="additiveamount != null">
        additiveamount = #{additiveamount,jdbcType=INTEGER},
      </if>
      <if test="concreteamount != null">
        concreteamount = #{concreteamount,jdbcType=INTEGER},
      </if>
      <if test="registrant != null">
        registrant = #{registrant,jdbcType=VARCHAR},
      </if>
      <if test="registranttime != null">
        registranttime = #{registranttime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nyist.model.Notification">
    update notification
    set contract_id = #{contractId,jdbcType=INTEGER},
      mixproportion_id = #{mixproportionId,jdbcType=INTEGER},
      stoneamount = #{stoneamount,jdbcType=INTEGER},
      sandamount = #{sandamount,jdbcType=INTEGER},
      cementamount = #{cementamount,jdbcType=INTEGER},
      wateramount = #{wateramount,jdbcType=INTEGER},
      additiveamount = #{additiveamount,jdbcType=INTEGER},
      concreteamount = #{concreteamount,jdbcType=INTEGER},
      registrant = #{registrant,jdbcType=VARCHAR},
      registranttime = #{registranttime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>