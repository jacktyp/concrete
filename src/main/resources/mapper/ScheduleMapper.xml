<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nyist.dao.ScheduleMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nyist.model.Schedule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="notification_id" jdbcType="INTEGER" property="notificationId" />
    <result column="contract_id" jdbcType="INTEGER" property="contractId" />
    <result column="vehicle_id" jdbcType="INTEGER" property="vehicleId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="productiontime" jdbcType="BIGINT" property="productiontime" />
    <result column="endtiime" jdbcType="BIGINT" property="endtiime" />
    <result column="registrant" jdbcType="VARCHAR" property="registrant" />
    <result column="registranttime" jdbcType="BIGINT" property="registranttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, notification_id, contract_id, vehicle_id, name, state, time, productiontime, 
    endtiime, registrant, registranttime
  </sql>
  <select id="selectByExample" parameterType="cn.edu.nyist.model.ScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.nyist.model.ScheduleExample">
    delete from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.nyist.model.Schedule">
    insert into schedule (id, notification_id, contract_id, 
      vehicle_id, name, state, 
      time, productiontime, endtiime, 
      registrant, registranttime)
    values (#{id,jdbcType=INTEGER}, #{notificationId,jdbcType=INTEGER}, #{contractId,jdbcType=INTEGER}, 
      #{vehicleId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{time,jdbcType=BIGINT}, #{productiontime,jdbcType=BIGINT}, #{endtiime,jdbcType=BIGINT}, 
      #{registrant,jdbcType=VARCHAR}, #{registranttime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nyist.model.Schedule">
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="notificationId != null">
        notification_id,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="vehicleId != null">
        vehicle_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="productiontime != null">
        productiontime,
      </if>
      <if test="endtiime != null">
        endtiime,
      </if>
      <if test="registrant != null">
        registrant,
      </if>
      <if test="registranttime != null">
        registranttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="notificationId != null">
        #{notificationId,jdbcType=INTEGER},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="vehicleId != null">
        #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="productiontime != null">
        #{productiontime,jdbcType=BIGINT},
      </if>
      <if test="endtiime != null">
        #{endtiime,jdbcType=BIGINT},
      </if>
      <if test="registrant != null">
        #{registrant,jdbcType=VARCHAR},
      </if>
      <if test="registranttime != null">
        #{registranttime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.nyist.model.ScheduleExample" resultType="java.lang.Long">
    select count(*) from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.notificationId != null">
        notification_id = #{record.notificationId,jdbcType=INTEGER},
      </if>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleId != null">
        vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.productiontime != null">
        productiontime = #{record.productiontime,jdbcType=BIGINT},
      </if>
      <if test="record.endtiime != null">
        endtiime = #{record.endtiime,jdbcType=BIGINT},
      </if>
      <if test="record.registrant != null">
        registrant = #{record.registrant,jdbcType=VARCHAR},
      </if>
      <if test="record.registranttime != null">
        registranttime = #{record.registranttime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update schedule
    set id = #{record.id,jdbcType=INTEGER},
      notification_id = #{record.notificationId,jdbcType=INTEGER},
      contract_id = #{record.contractId,jdbcType=INTEGER},
      vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT},
      productiontime = #{record.productiontime,jdbcType=BIGINT},
      endtiime = #{record.endtiime,jdbcType=BIGINT},
      registrant = #{record.registrant,jdbcType=VARCHAR},
      registranttime = #{record.registranttime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nyist.model.Schedule">
    update schedule
    <set>
      <if test="notificationId != null">
        notification_id = #{notificationId,jdbcType=INTEGER},
      </if>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=INTEGER},
      </if>
      <if test="vehicleId != null">
        vehicle_id = #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="productiontime != null">
        productiontime = #{productiontime,jdbcType=BIGINT},
      </if>
      <if test="endtiime != null">
        endtiime = #{endtiime,jdbcType=BIGINT},
      </if>
      <if test="registrant != null">
        registrant = #{registrant,jdbcType=VARCHAR},
      </if>
      <if test="registranttime != null">
        registranttime = #{registranttime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nyist.model.Schedule">
    update schedule
    set notification_id = #{notificationId,jdbcType=INTEGER},
      contract_id = #{contractId,jdbcType=INTEGER},
      vehicle_id = #{vehicleId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      time = #{time,jdbcType=BIGINT},
      productiontime = #{productiontime,jdbcType=BIGINT},
      endtiime = #{endtiime,jdbcType=BIGINT},
      registrant = #{registrant,jdbcType=VARCHAR},
      registranttime = #{registranttime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>